# Copyright (c) 2013 cozybit Inc.
#
# All rights reserved.
#
# These configuration variables influence various distro11s build properties
# such as where source code is checked out, where the rootfs is staged, etc.

# Target board
DISTRO11S_BOARD=qemu

# Debian release to use for building root filesystem (e.g. sid, testing, etc.)
DISTRO11S_DEB_RELEASE=sid

# Target board memory
# for example: 128M, 1G
DISTRO11S_QEMU_MEMORY="128M"

# Location where source should be checked out
DISTRO11S_SRC=${PWD}/src

# Location where output (e.g., binaries, images, etc.) should be written
DISTRO11S_OUT=${PWD}/out

# maximum number of make jobs, where applicable
DISTRO11S_JOBS=2

# do you want the board to know about your development host?  Some boards
# (e.g., qemu) will use this to automount an sshfs from your dev machine at
# boot time.
DISTRO11S_HOST_IP=192.168.55.1

# This is the hostname that will be set for the target board.  By default, it
# will be the board name.  But if you work in an environment with lots of other
# mesh developers, this can get confusing.  So you might want to make it
# something like ${DISTRO11S_BOARD}-${USR}.  Note that the value that you
# configure here will be appended with the host number in
# /etc/distro11s-hostnumber if that file exists.  For example, if you set
# DISTRO11S_HOSTNAME to foobar, then deploy your distro11s build on two nodes
# with /etc/distro11s-hostnumber = 0 and 1, the nodes will assign themselves
# the names foobar-0 and foobar-1 respectively.
DISTRO11S_HOSTNAME=${DISTRO11S_BOARD}

# static IP configuration: If you would like the board to have a static IP
# address, you can set it here.  If not, set DISTRO_STATIC_IFACE="" and the
# other STATIC variables will be ignored.
#
# Note that if /etc/distro11s-hostnumber exists, the value in this file will be
# added to the static IP in order to differentiate various hosts.  For example,
# if you have two nodes whose /etc/distro11s-hostnumber is set to 3 and 4
# respectively, and DISTRO11S_STATIC_IP is 192.168.99.100, the first node will
# end up with IP address 192.168.99.103, and the second will have
# 192.168.99.104.
DISTRO11S_STATIC_IFACE=eth0
DISTRO11S_STATIC_IP=192.168.55.2
DISTRO11S_STATIC_NM=255.255.255.0

# The target can auto mount a directory over sshfs if you like.  This is
# convenient for sharing files between your host and target.  If you want to
# use this feature, set this variable to the directory on your host that you
# would like to share.  Expect the files in /mnt on the qemu target.  Note that
# a ssh key without a passphrase will be generated and installed in ~/.ssh on
# your host to achieve this.
#
# NOTE: THIS FEATURE INTRODUCES SECURITY RISKS BOTH ON YOUR DEV MACHINE AND ON
# THE TARGET BOARD.  IT IS MEANT FOR DEVELOPMENT ONLY, NOT FOR PRODUCTION.
DISTRO11S_SSHFS_AUTOMOUNT_USER=${USER}
DISTRO11S_SSHFS_AUTOMOUNT_PATH=""

# A qemu instance can mount folders directly from within the guest.
# mount this on the host
DISTRO11S_VIRTFS_MOUNT_SRC="/home"
# here on the guest
DISTRO11S_VIRTFS_MOUNT_DST="/home"

# If you already have a distro11s tree checked out and populated somewhere, you
# can speed up the fetch phase by setting this variable to point to your
# existing DISTRO11S_SRC.
DISTRO11S_GIT_REFERENCE=""

# It is convenient to deploy your public key to root's authorized_keys file in
# the board's rootfs.  If you want to do this, set this variable to the path of
# your public key, usually ${HOME}/.ssh/id_rsa.pub
DISTRO11S_SSH_PUB_KEY=""

# Want your target board to have a default root password?  Set it here.
# IMPORTANT: This variable is used ONLY at build time. This means that all the
# nodes created from a specific distro11s build (USB installer) will share the
# same root password. You will need to rebuild the rootpassword package and
# then create a new USB installer. Also, you can always change the root
# password manually using "sudo passwd root" from any of the nodes.
DISTRO11S_ROOT_PW="bilbao"

# Some developer convenience scripts (e.g., foreach.sh) need to know the host
# numbers of the nodes you are maintaining.  They derive these by counting from
# 0 to DISTRO11S_NUM_NODES.  If you don't use these scripts, or if you don't
# use the whole host number scheme, no need to set this.
DISTRO11S_NUM_NODES=

# Use the below to customize the range of host numbers. Useful if you only want
# to sync a certain subset of your nodes.
DISTRO11S_START_NODE=
DISTRO11S_END_NODE=

# You may wish to override the default meshkit configuration so that it does
# not conflict with your co-developers, or with some existing deploy.  See
# packages/meshkit/meshkit.sample.conf for a sample config.  The actual
# deployed default configuration (if it exists) is generally board-specific and
# lives in board/<board>/overlay/etc/meshkit/meshkit.default.conf.  You could
# also use this as a sample config.  Anyway, if you want to override these
# defaults, point DISTRO11S_MESHKIT_CONFIG to your personalized config.  Note
# that this variable is respected by BOTH the provisioning script and the
# meshkit build script.  So this configuration will end up in your rootfs after
# a successful build or after running the provisioning script.
DISTRO11S_MESHKIT_CONFIG=""

# Set your current regulatory domain here.
DISTRO11S_REGDOMAIN=US

# If a name is given, a bridge with that name will be created and all tap
# interfaces will be bridged together.  This is required for multiple qemu
# instances
# DISTRO11S_BRIDGE="br0"
